[{"E:\\IntelliJ\\IntelliJUltimateProject\\agreement\\src\\main\\frontend\\src\\index.js":"1","E:\\IntelliJ\\IntelliJUltimateProject\\agreement\\src\\main\\frontend\\src\\reportWebVitals.js":"2","E:\\IntelliJ\\IntelliJUltimateProject\\agreement\\src\\main\\frontend\\src\\App.js":"3","E:\\IntelliJ\\IntelliJUltimateProject\\agreement\\src\\main\\frontend\\src\\Nav.js":"4","E:\\IntelliJ\\IntelliJUltimateProject\\agreement\\src\\main\\frontend\\src\\components\\HomePage\\HomePage.js":"5","E:\\IntelliJ\\IntelliJUltimateProject\\agreement\\src\\main\\frontend\\src\\components\\const\\apiConst.js":"6","E:\\IntelliJ\\IntelliJUltimateProject\\agreement\\src\\main\\frontend\\src\\components\\HomePage\\Customer\\Customer.js":"7","E:\\IntelliJ\\IntelliJUltimateProject\\agreement\\src\\main\\frontend\\src\\components\\HomePage\\Customer\\CustomerDetail.js":"8","E:\\IntelliJ\\IntelliJUltimateProject\\agreement\\src\\main\\frontend\\src\\components\\HomePage\\Agreement\\Agreement.js":"9","E:\\IntelliJ\\IntelliJUltimateProject\\agreement\\src\\main\\frontend\\src\\components\\HomePage\\Service\\Service.js":"10","E:\\IntelliJ\\IntelliJUltimateProject\\agreement\\src\\main\\frontend\\src\\components\\HomePage\\Function\\AddComponent.js":"11","E:\\IntelliJ\\IntelliJUltimateProject\\agreement\\src\\main\\frontend\\src\\components\\HomePage\\Function\\UpdateComponent.js":"12"},{"size":500,"mtime":1612086513397,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":851,"mtime":1612040064960,"results":"16","hashOfConfig":"14"},{"size":650,"mtime":1612039913176,"results":"17","hashOfConfig":"14"},{"size":471,"mtime":1612098308977,"results":"18","hashOfConfig":"14"},{"size":886,"mtime":1612172586771,"results":"19","hashOfConfig":"14"},{"size":1997,"mtime":1612171076955,"results":"20","hashOfConfig":"14"},{"size":2198,"mtime":1612174791781,"results":"21","hashOfConfig":"14"},{"size":2753,"mtime":1612174702658,"results":"22","hashOfConfig":"14"},{"size":1970,"mtime":1612173551983,"results":"23","hashOfConfig":"14"},{"size":5479,"mtime":1612172251792,"results":"24","hashOfConfig":"14"},{"size":4075,"mtime":1612105573099,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"bi8u7r",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},"E:\\IntelliJ\\IntelliJUltimateProject\\agreement\\src\\main\\frontend\\src\\index.js",[],["53","54"],"E:\\IntelliJ\\IntelliJUltimateProject\\agreement\\src\\main\\frontend\\src\\reportWebVitals.js",[],"E:\\IntelliJ\\IntelliJUltimateProject\\agreement\\src\\main\\frontend\\src\\App.js",[],"E:\\IntelliJ\\IntelliJUltimateProject\\agreement\\src\\main\\frontend\\src\\Nav.js",[],"E:\\IntelliJ\\IntelliJUltimateProject\\agreement\\src\\main\\frontend\\src\\components\\HomePage\\HomePage.js",["55"],"import \"./HomePage.css\"\r\nimport {useState} from \"react\";\r\nimport AddComponent from \"./Function/AddComponent\";\r\nimport UpdateComponent from \"./Function/UpdateComponent\";\r\n\r\n\r\nfunction HomePage() {\r\n\r\n    return (\r\n        <div>\r\n            <p>***</p>\r\n            <div className=\"welcome\">\r\n                <p>AGREEMENT SERVICE</p>\r\n            </div>\r\n            <AddComponent />\r\n            <UpdateComponent />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;\r\n","E:\\IntelliJ\\IntelliJUltimateProject\\agreement\\src\\main\\frontend\\src\\components\\const\\apiConst.js",[],"E:\\IntelliJ\\IntelliJUltimateProject\\agreement\\src\\main\\frontend\\src\\components\\HomePage\\Customer\\Customer.js",[],"E:\\IntelliJ\\IntelliJUltimateProject\\agreement\\src\\main\\frontend\\src\\components\\HomePage\\Customer\\CustomerDetail.js",["56","57"],"E:\\IntelliJ\\IntelliJUltimateProject\\agreement\\src\\main\\frontend\\src\\components\\HomePage\\Agreement\\Agreement.js",["58","59"],"E:\\IntelliJ\\IntelliJUltimateProject\\agreement\\src\\main\\frontend\\src\\components\\HomePage\\Service\\Service.js",["60","61"],"E:\\IntelliJ\\IntelliJUltimateProject\\agreement\\src\\main\\frontend\\src\\components\\HomePage\\Function\\AddComponent.js",[],"E:\\IntelliJ\\IntelliJUltimateProject\\agreement\\src\\main\\frontend\\src\\components\\HomePage\\Function\\UpdateComponent.js",["62","63","64"],"import axios from \"axios\";\r\nimport {ADD_AGREEMENT, ADD_CUSTOMER, ADD_SERVICE, UPDATE_SERVICE} from \"../../const/apiConst\";\r\nimport \"../HomePage.css\"\r\nimport {useState} from \"react\";\r\n\r\nfunction UpdateComponent(props) {\r\n\r\n    const [serviceId, setServiceId] = useState(\"\")\r\n    const [customerIdNumber, setCustomerIdNumber] = useState(\"\")\r\n    const [customerName, setCustomerName] = useState(\"\")\r\n    const [agreementType, setAgreementType] = useState(\"\")\r\n    const [startDate, setStartDate] = useState(\"\")\r\n    const [endDate, setEndDate] = useState(\"\")\r\n    const [typeService, setTypeService] = useState(\"\")\r\n    const [feeService, setFee] = useState(\"\")\r\n\r\n    const [isSuccess, setSuccess] = useState(\"\")\r\n\r\n    const handleUpdateService = async (e) => {\r\n        e.preventDefault();\r\n        await axios.put(UPDATE_SERVICE, {\r\n            \"id\": serviceId,\r\n            \"agreementEntity\": {\r\n                \"customerEntity\": {\r\n                    \"idNumber\": customerIdNumber,\r\n                    \"name\": customerName\r\n                },\r\n                \"typeAgreement\": parseInt(agreementType),\r\n                \"startAgreement\": startDate.replace(\"T\", \" \"),\r\n                \"endAgreement\": endDate.replace(\"T\", \" \")\r\n            },\r\n            \"typeService\": parseInt(typeService),\r\n            \"feeService\": parseInt(feeService)\r\n        }).then(r => {\r\n            if (r.data.id !== null) {\r\n                setSuccess(\"1\");\r\n                setServiceId(\"\")\r\n                setCustomerIdNumber(\"\")\r\n                setCustomerName(\"\")\r\n                setAgreementType(\"\")\r\n                setStartDate(\"\")\r\n                setEndDate(\"\")\r\n                setTypeService(\"\")\r\n                setFee(\"\")\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"updateSection\">\r\n                <div className=\"formSection\">\r\n                    <h3> Update service </h3>\r\n                    <form onSubmit={handleUpdateService}>\r\n                        <input required={true} name=\"id\" placeholder=\"Id of service\" value={serviceId}\r\n                               onChange={e => setServiceId(e.target.value)} />\r\n                        <br />\r\n                        <input required={true} name=\"customerIdNumber\" placeholder=\"customer ID number\"\r\n                               value={customerIdNumber}\r\n                               onChange={e => setCustomerIdNumber(e.target.value)} />\r\n                        <br />\r\n                        <input required={true} name=\"customerName\" placeholder=\"Customer name\" value={customerName}\r\n                               onChange={e => setCustomerName(e.target.value)} />\r\n                        <br />\r\n                        <input required={true} name=\"agreementType\" placeholder=\"Agreement type\" value={agreementType}\r\n                               onChange={e => setAgreementType(e.target.value)} />\r\n                        <br />\r\n                        <input required={true} type=\"datetime-local\" name=\"end\" step=\"1\" value={startDate}\r\n                               onChange={e => setStartDate(e.target.value)} />\r\n                        <br />\r\n                        <input type=\"datetime-local\" name=\"end\" step=\"1\" value={endDate}\r\n                               onChange={e => setEndDate(e.target.value)} />\r\n                        <br />\r\n                        <input required={true} name=\"typeService\" placeholder=\"Service type\" value={typeService}\r\n                               onChange={e => setTypeService(e.target.value)} />\r\n                        <br />\r\n                        <input required={true} name=\"feeService\" placeholder=\"Service fee\" value={feeService}\r\n                               onChange={e => setFee(e.target.value)} />\r\n                        <br />\r\n                        <input type=\"submit\"/>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            <p style={{\"color\": \"green\"}}>{isSuccess === \"1\" ? \"Updated\" : \"\"}</p>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UpdateComponent",{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":2,"column":9,"nodeType":"71","messageId":"72","endLine":2,"endColumn":17},{"ruleId":"73","severity":1,"message":"74","line":13,"column":35,"nodeType":"75","messageId":"76","endLine":13,"endColumn":37},{"ruleId":"77","severity":1,"message":"78","line":18,"column":8,"nodeType":"79","endLine":18,"endColumn":10,"suggestions":"80"},{"ruleId":"69","severity":1,"message":"81","line":2,"column":9,"nodeType":"71","messageId":"72","endLine":2,"endColumn":13},{"ruleId":"73","severity":1,"message":"74","line":36,"column":35,"nodeType":"75","messageId":"76","endLine":36,"endColumn":37},{"ruleId":"69","severity":1,"message":"81","line":2,"column":9,"nodeType":"71","messageId":"72","endLine":2,"endColumn":13},{"ruleId":"69","severity":1,"message":"82","line":4,"column":9,"nodeType":"71","messageId":"72","endLine":4,"endColumn":25},{"ruleId":"69","severity":1,"message":"83","line":2,"column":9,"nodeType":"71","messageId":"72","endLine":2,"endColumn":22},{"ruleId":"69","severity":1,"message":"84","line":2,"column":24,"nodeType":"71","messageId":"72","endLine":2,"endColumn":36},{"ruleId":"69","severity":1,"message":"85","line":2,"column":38,"nodeType":"71","messageId":"72","endLine":2,"endColumn":49},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["88"],"'Link' is defined but never used.","'DELETE_AGREEMENT' is defined but never used.","'ADD_AGREEMENT' is defined but never used.","'ADD_CUSTOMER' is defined but never used.","'ADD_SERVICE' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},"Update the dependencies array to be: [fetchData]",{"range":"91","text":"92"},[601,603],"[fetchData]"]